/**
 * @author Deloitte
 * @date 26-08-2025
 * @description Contains Test class for Constants Class.
 * Modification Log:
 * Version  Date        Author    Modification
 * 1.0      26-08-2025  Deloitte  InitalVersion
 **/
// Code Generated by Sidekick is for learning and experimentation purposes only.
@IsTest
public class ConstantsTest {
	@IsTest
	static void testConstantsCoverage() {
		// Response Related Constants
		System.assertEquals(
			'Processed',
			Constants.STATUS_PROCESSED,
			'STATUS_PROCESSED constant should match expected value'
		);
		System.assertEquals(
			'BO update failed',
			Constants.STATUS_BO_UPDATE_FAILED,
			'STATUS_BO_UPDATE_FAILED constant should match expected value'
		);
		System.assertEquals(
			'Salesforce Internal Error',
			Constants.ERROR_CATEGORY_SF_INTERNAL,
			'ERROR_CATEGORY_SF_INTERNAL constant should match expected value'
		);
		System.assertEquals(
			'Data Error',
			Constants.ERROR_CATEGORY_DATA,
			'ERROR_CATEGORY_DATA constant should match expected value'
		);
		System.assertEquals(
			'Service Error',
			Constants.ERROR_CATEGORY_SERVICE,
			'ERROR_CATEGORY_SERVICE constant should match expected value'
		);
		System.assertEquals(
			'ROW_LOCK',
			Constants.ERROR_CATEGORY_ROW_LOCK,
			'ERROR_CATEGORY_ROW_LOCK constant should match expected value'
		);
		System.assertEquals(
			'Bad Response',
			Constants.ERROR_CATEGORY_BAD_RESPONSE,
			'ERROR_CATEGORY_BAD_RESPONSE constant should match expected value'
		);

		// Integration Event Status Constants
		System.assertEquals(
			'Payload Created',
			Constants.INTEGRATION_EVENT_STATUS_PAYLOAD_CREATED,
			'INTEGRATION_EVENT_STATUS_PAYLOAD_CREATED constant should match expected value'
		);
		System.assertEquals(
			'Payload Creation Failed',
			Constants.INTEGRATION_EVENT_STATUS_PAYLOAD_CREATION_FAILED,
			'INTEGRATION_EVENT_STATUS_PAYLOAD_CREATION_FAILED constant should match expected value'
		);
		System.assertEquals(
			'Event Published',
			Constants.INTEGRATION_EVENT_STATUS_EVENT_PUBLISHED,
			'INTEGRATION_EVENT_STATUS_EVENT_PUBLISHED constant should match expected value'
		);
		System.assertEquals(
			'Event Published Failed',
			Constants.INTEGRATION_EVENT_STATUS_EVENT_PUBLISHED_FAILED,
			'INTEGRATION_EVENT_STATUS_EVENT_PUBLISHED_FAILED constant should match expected value'
		);
		System.assertEquals(
			'Event Completed',
			Constants.INTEGRATION_EVENT_STATUS_EVENT_COMPLETED,
			'INTEGRATION_EVENT_STATUS_EVENT_COMPLETED constant should match expected value'
		);
		System.assertEquals(
			'BO Updated Failure',
			Constants.INTEGRATION_EVENT_STATUS_BO_UPDATE_FAILURE,
			'INTEGRATION_EVENT_STATUS_BO_UPDATE_FAILURE constant should match expected value'
		);
		System.assertEquals(
			'Bad Response',
			Constants.INTEGRATION_EVENT_STATUS_BAD_RESPONSE,
			'INTEGRATION_EVENT_STATUS_BAD_RESPONSE constant should match expected value'
		);
		System.assertEquals(
			'Ready to Resync',
			Constants.INTEGRATION_EVENT_STATUS_READY_TO_RESYNC,
			'INTEGRATION_EVENT_STATUS_READY_TO_RESYNC constant should match expected value'
		);
		System.assertEquals(
			'EventUuid',
			Constants.INTEGRATION_EVENT_UUID,
			'INTEGRATION_EVENT_UUID constant should match expected value'
		);
		System.assertEquals(
			'Processed',
			Constants.INTEGRATION_EVENT_STATUS_PROCESSED,
			'INTEGRATION_EVENT_STATUS_PROCESSED constant should match expected value'
		);
		System.assertEquals(
			'Error',
			Constants.INTEGRATION_EVENT_STATUS_ERROR,
			'INTEGRATION_EVENT_STATUS_ERROR constant should match expected value'
		);
		System.assertEquals(
			'Succeeded',
			Constants.INTEGRATION_EVENT_STATUS_SUCCEEDED,
			'INTEGRATION_EVENT_STATUS_SUCCEEDED constant should match expected value'
		);

		// Business Event Constants
		System.assertEquals(
			'Account Activation',
			Constants.BUSINESS_EVENT_ACCOUNT_ACTIVATION,
			'BUSINESS_EVENT_ACCOUNT_ACTIVATION constant should match expected value'
		);
		System.assertEquals(
			'Account Update',
			Constants.BUSINESS_EVENT_ACCOUNT_UPDATE,
			'BUSINESS_EVENT_ACCOUNT_UPDATE constant should match expected value'
		);
		System.assertEquals(
			'Contact Create',
			Constants.BUSINESS_EVENT_CONTACT_CREATE,
			'BUSINESS_EVENT_CONTACT_CREATE constant should match expected value'
		);
		System.assertEquals(
			'Contact Update',
			Constants.BUSINESS_EVENT_CONTACT_UPDATE,
			'BUSINESS_EVENT_CONTACT_UPDATE constant should match expected value'
		);
		System.assertEquals(
			'Address Create',
			Constants.BUSINESS_EVENT_ADDRESS_CREATE,
			'BUSINESS_EVENT_ADDRESS_CREATE constant should match expected value'
		);
		System.assertEquals(
			'Address Update',
			Constants.BUSINESS_EVENT_ADDRESS_UPDATE,
			'BUSINESS_EVENT_ADDRESS_UPDATE constant should match expected value'
		);

		// Payload Related Constants
		System.assertEquals('Object', Constants.OBJECT_PREFIX, 'OBJECT_PREFIX constant should match expected value');
		System.assertEquals(
			'objectNumber',
			Constants.OBJECT_NUMBER_KEY,
			'OBJECT_NUMBER_KEY constant should match expected value'
		);
		System.assertEquals(
			'_Payload__c',
			Constants.OBJECT_PAYLOAD_SUFFIX,
			'OBJECT_PAYLOAD_SUFFIX constant should match expected value'
		);
		System.assertEquals(
			'primaryContact',
			Constants.PRIMARY_CONTACT_KEY,
			'PRIMARY_CONTACT_KEY constant should match expected value'
		);
		System.assertEquals(
			'primaryShipToAddress',
			Constants.PRIMARY_SHIP_TO_ADDRESS_KEY,
			'PRIMARY_SHIP_TO_ADDRESS_KEY constant should match expected value'
		);
		System.assertEquals(
			'primaryBillToAddress',
			Constants.PRIMARY_BILL_TO_ADDRESS_KEY,
			'PRIMARY_BILL_TO_ADDRESS_KEY constant should match expected value'
		);
		System.assertEquals(
			'Payment_Term__c',
			Constants.PAYMENT_TERM_KEY,
			'PAYMENT_TERM_KEY constant should match expected value'
		);
		System.assertEquals(
			'Payment_Method__c',
			Constants.PAYMENT_METHOD_KEY,
			'PAYMENT_METHOD_KEY constant should match expected value'
		);
		System.assertEquals(
			'transactionType',
			Constants.TRANSACTION_TYPE_KEY,
			'TRANSACTION_TYPE_KEY constant should match expected value'
		);
		System.assertEquals('Id', Constants.ID_KEY, 'ID_KEY constant should match expected value');
		System.assertEquals(
			'AccountId',
			Constants.ACCOUNT_ID_KEY,
			'ACCOUNT_ID_KEY constant should match expected value'
		);
		System.assertEquals(
			'Account__c',
			Constants.ACCOUNT_C_KEY,
			'ACCOUNT_C_KEY constant should match expected value'
		);
		System.assertEquals(
			'Account__r',
			Constants.ACCOUNT_R_KEY,
			'ACCOUNT_R_KEY constant should match expected value'
		);
		System.assertEquals('Account', Constants.ACCOUNT_OBJECT, 'ACCOUNT_OBJECT constant should match expected value');
		System.assertEquals('Contact', Constants.CONTACT_OBJECT, 'CONTACT_OBJECT constant should match expected value');
		System.assertEquals('Contact', Constants.CONTACT_TYPE, 'CONTACT_TYPE constant should match expected value');
		System.assertEquals('Address', Constants.ADDRESS_TYPE, 'ADDRESS_TYPE constant should match expected value');
		System.assertEquals(
			'Address__c',
			Constants.ADDRESS_OBJECT,
			'ADDRESS_OBJECT constant should match expected value'
		);
		System.assertEquals(
			'Address_c',
			Constants.ADDRESS_OBJECT_META_RECORD,
			'ADDRESS_OBJECT_META_RECORD constant should match expected value'
		);
		System.assertEquals('Type', Constants.TYPE_KEY, 'TYPE_KEY constant should match expected value');
		System.assertEquals(
			'Customer_Account_Number__c',
			Constants.CUSTOMER_ACCOUNT_NUMBER_KEY,
			'CUSTOMER_ACCOUNT_NUMBER_KEY constant should match expected value'
		);
		System.assertEquals(
			'UniversalAccountNumber',
			Constants.UNIVERSAL_ACCOUNT_NUMBER_KEY,
			'UNIVERSAL_ACCOUNT_NUMBER_KEY constant should match expected value'
		);

		// SOQL Related Constants
		System.assertEquals(
			' WITH SECURITY_ENFORCED',
			Constants.WITH_SECURITY_ENFORCED,
			'WITH_SECURITY_ENFORCED constant should match expected value'
		);
		System.assertEquals(' LIMIT ', Constants.LIMIT_CLAUSE, 'LIMIT_CLAUSE constant should match expected value');
		System.assertEquals(' WHERE ', Constants.WHERE_CLAUSE, 'WHERE_CLAUSE constant should match expected value');
		System.assertEquals(' AND ', Constants.AND_OPERATOR, 'AND_OPERATOR constant should match expected value');
		System.assertEquals('SELECT ', Constants.SELECT_CLAUSE, 'SELECT_CLAUSE constant should match expected value');
		System.assertEquals(' FROM ', Constants.FROM_CLAUSE, 'FROM_CLAUSE constant should match expected value');
		System.assertEquals(' ORDER BY ', Constants.ORDER_BY, 'ORDER_BY constant should match expected value');
		System.assertEquals('Oracle_Id__c', Constants.ORACLE_ID, 'ORACLE_ID constant should match expected value');

		// Integration Event Object Constants
		System.assertEquals(
			'Product2',
			Constants.INTEGRATION_EVENT_OBJECT_PRODUCT,
			'INTEGRATION_EVENT_OBJECT_PRODUCT constant should match expected value'
		);
		System.assertEquals(
			'Account',
			Constants.INTEGRATION_EVENT_OBJECT_ACCOUNT,
			'INTEGRATION_EVENT_OBJECT_ACCOUNT constant should match expected value'
		);
		System.assertEquals(
			'Contact',
			Constants.INTEGRATION_EVENT_OBJECT_CONTACT,
			'INTEGRATION_EVENT_OBJECT_CONTACT constant should match expected value'
		);
		System.assertEquals(
			'Address',
			Constants.INTEGRATION_EVENT_OBJECT_ADDRESS,
			'INTEGRATION_EVENT_OBJECT_ADDRESS constant should match expected value'
		);
		System.assertEquals(
			'Address_c',
			Constants.INTEGRATION_EVENT_OBJECT_ADDRESS_C,
			'INTEGRATION_EVENT_OBJECT_ADDRESS_C constant should match expected value'
		);
		System.assertEquals(
			'Order',
			Constants.INTEGRATION_EVENT_OBJECT_ORDER,
			'INTEGRATION_EVENT_OBJECT_ORDER constant should match expected value'
		);
		System.assertEquals(
			'OrderItem',
			Constants.INTEGRATION_EVENT_OBJECT_ORDERITEM,
			'INTEGRATION_EVENT_OBJECT_ORDERITEM constant should match expected value'
		);
		System.assertEquals(
			'LegalEntity',
			Constants.INTEGRATION_EVENT_OBJECT_LEGALENTITY,
			'INTEGRATION_EVENT_OBJECT_LEGALENTITY constant should match expected value'
		);

		// Integration Event Type and Status Constants
		System.assertEquals(
			'Create',
			Constants.INTEGRATION_EVENT_TYPE_CREATE,
			'INTEGRATION_EVENT_TYPE_CREATE constant should match expected value'
		);
		System.assertEquals(
			'Update',
			Constants.INTEGRATION_EVENT_TYPE_UPDATE,
			'INTEGRATION_EVENT_TYPE_UPDATE constant should match expected value'
		);
		System.assertEquals(
			'Completed',
			Constants.INTEGRATION_EVENT_STATUS_COMPLETED,
			'INTEGRATION_EVENT_STATUS_COMPLETED constant should match expected value'
		);
		System.assertEquals(
			'Failed',
			Constants.INTEGRATION_EVENT_STATUS_FAILED,
			'INTEGRATION_EVENT_STATUS_FAILED constant should match expected value'
		);
		System.assertEquals(
			'IE Created',
			Constants.INTEGRATION_EVENT_STATUS_IE_CREATED,
			'INTEGRATION_EVENT_STATUS_IE_CREATED constant should match expected value'
		);
		System.assertEquals(
			'Discarded',
			Constants.INTEGRATION_EVENT_STATUS_DISCARDED,
			'INTEGRATION_EVENT_STATUS_DISCARDED constant should match expected value'
		);
		System.assertEquals(
			'New',
			Constants.INTEGRATION_EVENT_STATUS_NEW,
			'INTEGRATION_EVENT_STATUS_NEW constant should match expected value'
		);
		System.assertEquals(
			'Success',
			Constants.INTEGRATION_EVENT_STATUS_SUCCESS,
			'INTEGRATION_EVENT_STATUS_SUCCESS constant should match expected value'
		);
		System.assertEquals(
			'Ready for Sync',
			Constants.INTEGRATION_EVENT_STATUS_READY_FOR_SYNC,
			'INTEGRATION_EVENT_STATUS_READY_FOR_SYNC constant should match expected value'
		);
		System.assertEquals(
			'Event Published',
			Constants.INTEGRATION_EVENT_SUBSTATUS_EVENT_PUBLISHED,
			'INTEGRATION_EVENT_SUBSTATUS_EVENT_PUBLISHED constant should match expected value'
		);
		System.assertEquals(
			'Event Consumed',
			Constants.INTEGRATION_EVENT_SUBSTATUS_EVENT_CONSUMED,
			'INTEGRATION_EVENT_SUBSTATUS_EVENT_CONSUMED constant should match expected value'
		);
		System.assertEquals(
			'Response Timed Out',
			Constants.INTEGRATION_EVENT_SUBSTATUS_RESPONSE_TIMED_OUT,
			'INTEGRATION_EVENT_SUBSTATUS_RESPONSE_TIMED_OUT constant should match expected value'
		);
		System.assertEquals(
			'Service Error',
			Constants.INTEGRATION_EVENT_ERROR_TYPE_SERVICE_ERROR,
			'INTEGRATION_EVENT_ERROR_TYPE_SERVICE_ERROR constant should match expected value'
		);
		System.assertEquals(
			'IntegrationEventTriggerHelper',
			Constants.INTEGRATION_EVENT_TRIGGER_HELPER,
			'INTEGRATION_EVENT_TRIGGER_HELPER constant should match expected value'
		);
		System.assertEquals(
			'publishRecordSyncForIntegrationEvents',
			Constants.IE_TRIGGER_HELPER_PUBLISH_METHOD,
			'IE_TRIGGER_HELPER_PUBLISH_METHOD constant should match expected value'
		);
		System.assertEquals(
			'processIntegrationRecords',
			Constants.IE_TRIGGER_HELPER_PROCESSRECORD_METHOD,
			'IE_TRIGGER_HELPER_PROCESSRECORD_METHOD constant should match expected value'
		);
		System.assertEquals(
			'Oracle',
			Constants.ORACLE_TARGET_SYSTEM,
			'ORACLE_TARGET_SYSTEM constant should match expected value'
		);
		System.assertEquals(
			'KaseyaOne',
			Constants.K1_TARGET_SYSTEM,
			'K1_TARGET_SYSTEM constant should match expected value'
		);
		System.assertEquals(
			'Queued',
			Constants.INTEGRATION_EVENT_STATUS_QUEUED,
			'INTEGRATION_EVENT_STATUS_QUEUED constant should match expected value'
		);
		System.assertEquals(
			'Outbound',
			Constants.INTEGRATION_EVENT_DIRECTION_OUTBOUND,
			'INTEGRATION_EVENT_DIRECTION_OUTBOUND constant should match expected value'
		);
		System.assertEquals(
			'Inbound',
			Constants.INTEGRATION_EVENT_DIRECTION_INBOUND,
			'INTEGRATION_EVENT_DIRECTION_INBOUND constant should match expected value'
		);

		// Oracle Response Processing Constants
		System.assertEquals(
			'Device Fulfilment',
			Constants.BUSINESS_EVENT_DEVICE_FULFILLMENT,
			'BUSINESS_EVENT_DEVICE_FULFILLMENT constant should match expected value'
		);
		System.assertEquals(
			'Awaiting Shipping',
			Constants.FULFILLMENT_STATUS_AWAITING_SHIPPING,
			'FULFILLMENT_STATUS_AWAITING_SHIPPING constant should match expected value'
		);
		System.assertEquals(
			'Shipped',
			Constants.FULFILLMENT_STATUS_SHIPPED,
			'FULFILLMENT_STATUS_SHIPPED constant should match expected value'
		);
		System.assertEquals(
			'Delivered',
			Constants.FULFILLMENT_STATUS_DELIVERED,
			'FULFILLMENT_STATUS_DELIVERED constant should match expected value'
		);
		System.assertEquals(
			'Ready for Shipment',
			Constants.FULFILLMENT_STATUS_READY_FOR_SHIPMENT,
			'FULFILLMENT_STATUS_READY_FOR_SHIPMENT constant should match expected value'
		);
		System.assertEquals(
			'Shipped',
			Constants.DEVICE_STATUS_SHIPPED,
			'DEVICE_STATUS_SHIPPED constant should match expected value'
		);
		System.assertEquals(
			'Delivered',
			Constants.DEVICE_STATUS_DELIVERED,
			'DEVICE_STATUS_DELIVERED constant should match expected value'
		);

		// Product Status Constants
		System.assertEquals(
			'Early Adoption',
			Constants.EARLY_ADOPTION,
			'EARLY_ADOPTION constant should match expected value'
		);

		// Payload Generator Constants
		System.assertEquals(
			'integrationEvents',
			Constants.PAYLOAD_GENERATOR_INTEGRATION_EVENTS,
			'PAYLOAD_GENERATOR_INTEGRATION_EVENTS constant should match expected value'
		);
		System.assertEquals(
			'header',
			Constants.PAYLOAD_GENERATOR_HEADER,
			'PAYLOAD_GENERATOR_HEADER constant should match expected value'
		);
		System.assertEquals(
			'GroupID__c',
			Constants.PAYLOAD_GENERATOR_GROUPID,
			'PAYLOAD_GENERATOR_GROUPID constant should match expected value'
		);
		System.assertEquals(
			'EventType__c',
			Constants.PAYLOAD_GENERATOR_EVENT_TYPE,
			'PAYLOAD_GENERATOR_EVENT_TYPE constant should match expected value'
		);
		System.assertEquals(
			'businessIdentifier',
			Constants.PAYLOAD_GENERATOR_BUSINESS_IDENTIFIER,
			'PAYLOAD_GENERATOR_BUSINESS_IDENTIFIER constant should match expected value'
		);
		System.assertEquals(
			'Address__c',
			Constants.PAYLOAD_GENERATOR_ADDRESS_C,
			'PAYLOAD_GENERATOR_ADDRESS_C constant should match expected value'
		);
		System.assertEquals(
			'Primary_Contact__c',
			Constants.PAYLOAD_GENERATOR_PRIMARY_CONTACT,
			'PAYLOAD_GENERATOR_PRIMARY_CONTACT constant should match expected value'
		);
		System.assertEquals(
			'yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'',
			Constants.PAYLOAD_GENERATOR_DATE_FORMAT,
			'PAYLOAD_GENERATOR_DATE_FORMAT constant should match expected value'
		);
		System.assertEquals(
			'ParentId',
			Constants.PAYLOAD_GENERATOR_PARENT_ID,
			'PAYLOAD_GENERATOR_PARENT_ID constant should match expected value'
		);
		System.assertEquals(
			'RecordType',
			Constants.PAYLOAD_GENERATOR_RECORD_TYPE,
			'PAYLOAD_GENERATOR_RECORD_TYPE constant should match expected value'
		);
		System.assertEquals(
			'Parent',
			Constants.PAYLOAD_GENERATOR_PARENT,
			'PAYLOAD_GENERATOR_PARENT constant should match expected value'
		);
		System.assertEquals(
			'CurrencyIsoCode',
			Constants.PAYLOAD_GENERATOR_CURRENCY_ISO_CODE,
			'PAYLOAD_GENERATOR_CURRENCY_ISO_CODE constant should match expected value'
		);
		System.assertEquals(
			'Type',
			Constants.PAYLOAD_GENERATOR_TYPE_KEY,
			'PAYLOAD_GENERATOR_TYPE_KEY constant should match expected value'
		);
		System.assertEquals(
			'Address_Type__c',
			Constants.PAYLOAD_GENERATOR_ADDRESS_OBJECT_ADDRESSTYPE,
			'PAYLOAD_GENERATOR_ADDRESS_OBJECT_ADDRESSTYPE constant should match expected value'
		);
		System.assertEquals(
			'Ship-To',
			Constants.PAYLOAD_GENERATOR_ADDRESS_TYPE_SHIP_TO,
			'PAYLOAD_GENERATOR_ADDRESS_TYPE_SHIP_TO constant should match expected value'
		);
		System.assertEquals(
			'Bill-To',
			Constants.PAYLOAD_GENERATOR_ADDRESS_TYPE_BILL_TO,
			'PAYLOAD_GENERATOR_ADDRESS_TYPE_BILL_TO constant should match expected value'
		);
		System.assertEquals(
			'systemName',
			Constants.PAYLOAD_GENERATOR_SYSTEM_NAME_KEY,
			'PAYLOAD_GENERATOR_SYSTEM_NAME_KEY constant should match expected value'
		);
		System.assertEquals(
			'Salesforce',
			Constants.PAYLOAD_GENERATOR_SALESFORCE_VALUE,
			'PAYLOAD_GENERATOR_SALESFORCE_VALUE constant should match expected value'
		);
		System.assertEquals(
			'transactionId',
			Constants.PAYLOAD_GENERATOR_TRANSACTION_ID_KEY,
			'PAYLOAD_GENERATOR_TRANSACTION_ID_KEY constant should match expected value'
		);
		System.assertEquals(
			'requestId',
			Constants.PAYLOAD_GENERATOR_REQUEST_ID_KEY,
			'PAYLOAD_GENERATOR_REQUEST_ID_KEY constant should match expected value'
		);
		System.assertEquals(
			'requestPriority',
			Constants.PAYLOAD_GENERATOR_REQUEST_PRIORITY_KEY,
			'PAYLOAD_GENERATOR_REQUEST_PRIORITY_KEY constant should match expected value'
		);
		System.assertEquals(
			'Normal',
			Constants.PAYLOAD_GENERATOR_NORMAL_PRIORITY,
			'PAYLOAD_GENERATOR_NORMAL_PRIORITY constant should match expected value'
		);
		System.assertEquals('payload', Constants.PAYLOAD_KEY, 'PAYLOAD_KEY constant should match expected value');
		System.assertEquals('lines', Constants.LINES_KEY, 'LINES_KEY constant should match expected value');
		System.assertEquals(
			'orderIntegrationEventId',
			Constants.ORDER_INTEGRATION_EVENT_ID_KEY,
			'ORDER_INTEGRATION_EVENT_ID_KEY constant should match expected value'
		);
		System.assertEquals(
			'orderLineIntegrationEventId',
			Constants.ORDER_LINE_INTEGRATION_EVENT_ID_KEY,
			'ORDER_LINE_INTEGRATION_EVENT_ID_KEY constant should match expected value'
		);
		System.assertEquals(
			'Type',
			Constants.PAYLOAD_GENERATOR_ACCOUNT_TYPE,
			'PAYLOAD_GENERATOR_ACCOUNT_TYPE constant should match expected value'
		);
		System.assertEquals(
			'Account_Subtype__c',
			Constants.PAYLOAD_GENERATOR_ACCOUNT_SUBTYPE,
			'PAYLOAD_GENERATOR_ACCOUNT_SUBTYPE constant should match expected value'
		);
		System.assertEquals(
			'BusinessEvent__c',
			Constants.PAYLOAD_GENERATOR_BUSINESS_EVENT,
			'PAYLOAD_GENERATOR_BUSINESS_EVENT constant should match expected value'
		);

		// Order Constants
		System.assertEquals('New', Constants.ORDER_STATUS_NEW, 'ORDER_STATUS_NEW constant should match expected value');
		System.assertEquals(
			'In Progress',
			Constants.ORDER_STATUS_IN_PROGRESS,
			'ORDER_STATUS_IN_PROGRESS constant should match expected value'
		);
		System.assertEquals(
			'On Hold',
			Constants.ORDER_STATUS_ON_HOLD,
			'ORDER_STATUS_ON_HOLD constant should match expected value'
		);
		System.assertEquals(
			'OrderTriggerHelper',
			Constants.ORDER_TRIGGER_HELPER,
			'ORDER_TRIGGER_HELPER constant should match expected value'
		);
		System.assertEquals(
			'createAccountRecordInIntegrationEvent',
			Constants.ORDER_TRIGGER_HELPER_CREATE_ACCOUNT_METHOD,
			'ORDER_TRIGGER_HELPER_CREATE_ACCOUNT_METHOD constant should match expected value'
		);
		System.assertEquals(
			'123456',
			Constants.ORDER_ORACLE_ID,
			'ORDER_ORACLE_ID constant should match expected value'
		);
		System.assertEquals('ORACLE', Constants.ORDER_ORACLE, 'ORDER_ORACLE constant should match expected value');
		System.assertEquals(
			'Order_Payload_',
			Constants.ORDER_ORACLE_PAYLOAD_FILE_NAME,
			'ORDER_ORACLE_PAYLOAD_FILE_NAME constant should match expected value'
		);
		System.assertEquals(
			'Awaiting Fulfillment/ Provisioning',
			Constants.ORDER_PRODUCT_STATUS_AWAITING_FULFILLMENT,
			'ORDER_PRODUCT_STATUS_AWAITING_FULFILLMENT constant should match expected value'
		);
		System.assertEquals(
			'AccountTriggerHelper',
			Constants.ACCOUNT_TRIGGER_HELPER,
			'ACCOUNT_TRIGGER_HELPER constant should match expected value'
		);
		System.assertEquals(
			'createIntegrationEventsOnAccountUpdate',
			Constants.ACCOUNT_TRIGGER_HELPER_CREATE_IE_METHOD,
			'ACCOUNT_TRIGGER_HELPER_CREATE_IE_METHOD constant should match expected value'
		);

		// User and Out of Office Constants
		System.assertEquals('Out Of Office Today', Constants.MESSAGE, 'MESSAGE constant should match expected value');
		System.assertEquals(
			'Message: ',
			Constants.ERROR_LOG_SERVICE_MESSAGE,
			'ERROR_LOG_SERVICE_MESSAGE constant should match expected value'
		);
		System.assertEquals(
			'; Fields: ',
			Constants.ERROR_LOG_SERVICE_FIELDS,
			'ERROR_LOG_SERVICE_FIELDS constant should match expected value'
		);
		System.assertEquals(
			'; Status Code: ',
			Constants.ERROR_LOG_SERVICE_STATUS_CODE,
			'ERROR_LOG_SERVICE_STATUS_CODE constant should match expected value'
		);
		System.assertEquals(
			'UTF-8',
			Constants.EMAILENCODINGKEY,
			'EMAILENCODINGKEY constant should match expected value'
		);
		System.assertEquals('en_US', Constants.LOCALESIDKEY, 'LOCALESIDKEY constant should match expected value');
		System.assertEquals(
			'en_US',
			Constants.LANGAUGELOCALEKEY,
			'LANGAUGELOCALEKEY constant should match expected value'
		);
		System.assertEquals(
			'useroutofoffice@ooo.com',
			Constants.OUTOFOFFICEEMAIL,
			'OUTOFOFFICEEMAIL constant should match expected value'
		);
		System.assertEquals(
			'America/Los_Angeles',
			Constants.TIMEZONESIDKEY,
			'TIMEZONESIDKEY constant should match expected value'
		);
		System.assertEquals(
			'Standard User',
			Constants.STANDARD_USER,
			'STANDARD_USER constant should match expected value'
		);
		System.assertEquals('AL', Constants.ALIAS, 'ALIAS constant should match expected value');

		// Lead Constants
		System.assertEquals('lastName', Constants.LAST_NAME, 'LAST_NAME constant should match expected value');
		System.assertEquals(
			'IT Operations',
			Constants.LEAD_SUPER_FAMILY_IT_OPERATIONS,
			'LEAD_SUPER_FAMILY_IT_OPERATIONS constant should match expected value'
		);
		System.assertEquals(
			'Endpoint',
			Constants.LEAD_SUPER_FAMILY_ENDPOINT,
			'LEAD_SUPER_FAMILY_ENDPOINT constant should match expected value'
		);
		System.assertEquals('Blog', Constants.LEAD_SOURCE, 'LEAD_SOURCE constant should match expected value');
		System.assertEquals('Marketing', Constants.LEAD_ORIGIN, 'LEAD_ORIGIN constant should match expected value');
		System.assertEquals(
			'test Company 1',
			Constants.LEAD_COMPANY_I,
			'LEAD_COMPANY_I constant should match expected value'
		);
		System.assertEquals(
			'Marketing Qualified Lead',
			Constants.LEAD_STATUS_MQL,
			'LEAD_STATUS_MQL constant should match expected value'
		);
		System.assertEquals(
			'Marketing Engaged Lead',
			Constants.LEAD_STATUS_MEL,
			'LEAD_STATUS_MEL constant should match expected value'
		);

		// Status Constants
		System.assertEquals('Draft', Constants.DRAFT, 'DRAFT constant should match expected value');
		System.assertEquals('Active', Constants.ACTIVE, 'ACTIVE constant should match expected value');
		System.assertEquals('Inactive', Constants.INACTIVE, 'INACTIVE constant should match expected value');
		System.assertEquals('Approved', Constants.APPROVED, 'APPROVED constant should match expected value');
		System.assertEquals('Processing', Constants.PROCESSING, 'PROCESSING constant should match expected value');
		System.assertEquals('Queued', Constants.QUEUED, 'QUEUED constant should match expected value');
		System.assertEquals(
			'Ready for Provisioning/Fulfillment',
			Constants.READY_FOR_PROVISIONING_FULFILLMENT,
			'READY_FOR_PROVISIONING_FULFILLMENT constant should match expected value'
		);
		System.assertEquals('On Hold', Constants.ON_HOLD_STATUS, 'ON_HOLD_STATUS constant should match expected value');
		System.assertEquals('New', Constants.CASE_STATUS_NEW, 'CASE_STATUS_NEW constant should match expected value');

		// Product Family and Picklist Constants
		System.assertEquals('Hardware', Constants.HARDWARE, 'HARDWARE constant should match expected value');
		System.assertEquals('Software', Constants.SOFTWARE, 'SOFTWARE constant should match expected value');
		System.assertEquals('SAAS', Constants.PRODUCT_SAAS, 'PRODUCT_SAAS constant should match expected value');
		System.assertEquals(
			'QUALIFICATION',
			Constants.QUALIFICATION,
			'QUALIFICATION constant should match expected value'
		);
		System.assertEquals(
			'Manual Provisioning',
			Constants.CASE_TYPE_MANUAL_PROVISIONING,
			'CASE_TYPE_MANUAL_PROVISIONING constant should match expected value'
		);
		System.assertEquals(
			'Manual',
			Constants.FULFILLMENT_TYPE_MANUAL,
			'FULFILLMENT_TYPE_MANUAL constant should match expected value'
		);
		System.assertEquals('OneTime', Constants.ONETIME, 'ONETIME constant should match expected value');
		System.assertEquals('Percentage', Constants.PERCENTAGE, 'PERCENTAGE constant should match expected value');

		// Class Method Names Constants
		System.assertEquals(
			'ErrorLogServiceTest',
			Constants.ERRORTEST,
			'ERRORTEST constant should match expected value'
		);
		System.assertEquals(
			'TestGenericException',
			Constants.GENERICMETHODEXCEPTION,
			'GENERICMETHODEXCEPTION constant should match expected value'
		);
		System.assertEquals('execute', Constants.BATCH_EXECUTE, 'BATCH_EXECUTE constant should match expected value');
		System.assertEquals(
			'PricingUpdateBatch',
			Constants.PRICING_UPDATE_BATCH,
			'PRICING_UPDATE_BATCH constant should match expected value'
		);
		System.assertEquals(
			'triggerPricingBatch',
			Constants.TRIGGER_PRICING_BATCH,
			'TRIGGER_PRICING_BATCH constant should match expected value'
		);
		System.assertEquals(
			'FxRateController',
			Constants.FX_RATE_CONTROLLER,
			'FX_RATE_CONTROLLER constant should match expected value'
		);
		System.assertEquals(
			'getPricebookEntries',
			Constants.GET_PRICEBOOK_ENTRIES,
			'GET_PRICEBOOK_ENTRIES constant should match expected value'
		);
		System.assertEquals(
			'getAttributeBasedAdjustments',
			Constants.GET_ATTRIBUTE_BASED_ADJUSTMENTS,
			'GET_ATTRIBUTE_BASED_ADJUSTMENTS constant should match expected value'
		);
		System.assertEquals(
			'getAllExchangeRates',
			Constants.GET_ALL_EXCHANGE_RATES,
			'GET_ALL_EXCHANGE_RATES constant should match expected value'
		);

		// Test Data Constants
		System.assertEquals('Test Name', Constants.TESTNAME, 'TESTNAME constant should match expected value');
		System.assertEquals(
			'TestData@setup.com',
			Constants.TESTEMAIL,
			'TESTEMAIL constant should match expected value'
		);
		System.assertEquals('US', Constants.US, 'US constant should match expected value');
		System.assertEquals('USD', Constants.USDCODE, 'USDCODE constant should match expected value');
		System.assertEquals('CAD', Constants.CADCODE, 'CADCODE constant should match expected value');
		System.assertEquals('Default', Constants.DEFAULT_VALUE, 'DEFAULT_VALUE constant should match expected value');
		System.assertEquals(
			'United States',
			Constants.UNITEDSTATES,
			'UNITEDSTATES constant should match expected value'
		);
		System.assertEquals('AL', Constants.AL, 'AL constant should match expected value');
		System.assertEquals('Alabama', Constants.ALABAMA, 'ALABAMA constant should match expected value');
		System.assertEquals('Birmingham', Constants.BIRMINGHAM, 'BIRMINGHAM constant should match expected value');
		System.assertEquals('123', Constants.BILLING_STREET, 'BILLING_STREET constant should match expected value');
		System.assertEquals('35005', Constants.ZIPCODE, 'ZIPCODE constant should match expected value');
		System.assertEquals(
			'HW Product',
			Constants.HW_PRODUCT_NAME,
			'HW_PRODUCT_NAME constant should match expected value'
		);
		System.assertEquals(
			'SW Product',
			Constants.SW_PRODUCT_NAME,
			'SW_PRODUCT_NAME constant should match expected value'
		);
		System.assertEquals(
			'HWPROD',
			Constants.HW_PRODUCT_CODE,
			'HW_PRODUCT_CODE constant should match expected value'
		);
		System.assertEquals(
			'SWPROD',
			Constants.SW_PRODUCT_CODE,
			'SW_PRODUCT_CODE constant should match expected value'
		);
		System.assertEquals('ITG', Constants.ITG, 'ITG constant should match expected value');
		System.assertEquals('Quote', Constants.OBJECT_QUOTE, 'OBJECT_QUOTE constant should match expected value');
		System.assertEquals('id', Constants.STRING_ID, 'STRING_ID constant should match expected value');
		System.assertEquals('123123213', Constants.PHONE, 'PHONE constant should match expected value');
		System.assertEquals('TEST', Constants.TEST, 'TEST constant should match expected value');

		// Cron Expression Constants
		System.assertEquals(
			'0 0 9 ? * *',
			Constants.PROCESS_ORDER_PRODUCT_BATCH_CRON,
			'PROCESS_ORDER_PRODUCT_BATCH_CRON constant should match expected value'
		);
		System.assertEquals(
			'0 0 2 * * ?',
			Constants.ASSET_STATUS_UPDATE_BATCH_CRON,
			'ASSET_STATUS_UPDATE_BATCH_CRON constant should match expected value'
		);

		// Formatting and Record Type Constants
		System.assertEquals(
			' - ',
			Constants.SPACE_HYPHEN_FORMAT,
			'SPACE_HYPHEN_FORMAT constant should match expected value'
		);
		System.assertEquals(
			'Sales_Ops',
			Constants.CASE_SALES_OPS_REC_TYPE,
			'CASE_SALES_OPS_REC_TYPE constant should match expected value'
		);

		// Quote Approval Controller Constants
		System.assertEquals('recordId', Constants.RECORD_ID, 'RECORD_ID constant should match expected value');
		System.assertEquals('submitter', Constants.SUBMITTER, 'SUBMITTER constant should match expected value');
		System.assertEquals(
			'submissionComments',
			Constants.SUBMISSION_COMMENTS,
			'SUBMISSION_COMMENTS constant should match expected value'
		);
		System.assertEquals(
			'var_approvalPreCheck',
			Constants.APPROVAL_PRE_CHECK,
			'APPROVAL_PRE_CHECK constant should match expected value'
		);
		System.assertEquals(
			'varT_noApprovalsTriggered',
			Constants.NO_APPROVALS_TRIGGERED,
			'NO_APPROVALS_TRIGGERED constant should match expected value'
		);
		System.assertEquals(
			'var_anyValidationTriggerOutput',
			Constants.VALIDATION_TRIGGERS,
			'VALIDATION_TRIGGERS constant should match expected value'
		);
		System.assertEquals(
			'var_ValidationMessageOutput',
			Constants.VALIDATION_MESSAGE,
			'VALIDATION_MESSAGE constant should match expected value'
		);
		System.assertEquals('quoteId', Constants.QUOTE_ID, 'QUOTE_ID constant should match expected value');
		System.assertEquals(
			'var_QuoteValidation',
			Constants.QUOTE_VALIDATION,
			'QUOTE_VALIDATION constant should match expected value'
		);
		System.assertEquals(
			'QuoteApprovalController',
			Constants.QUOTE_APPROVAL_CONTROLLER,
			'QUOTE_APPROVAL_CONTROLLER constant should match expected value'
		);
		System.assertEquals('invokeFlow', Constants.INVOKE_FLOW, 'INVOKE_FLOW constant should match expected value');
		System.assertEquals(
			'submitQuoteForApproval',
			Constants.SUBMIT_QUOTE_FOR_APPROVAL,
			'SUBMIT_QUOTE_FOR_APPROVAL constant should match expected value'
		);

		// CLM Method Name Constants
		System.assertEquals(
			'inApprovalProcess',
			Constants.INAPPROVALPROCESS_METHODNAME,
			'INAPPROVALPROCESS_METHODNAME constant should match expected value'
		);
		System.assertEquals('Rejected', Constants.REJECTED, 'REJECTED constant should match expected value');
		System.assertEquals(
			'sendForExternalReview',
			Constants.SENDFOREXTERNALREVIEW_METHODNAME,
			'SENDFOREXTERNALREVIEW_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'externalReviewCompleted',
			Constants.EXTERNALREVIEWCOMPLETED_METHODNAME,
			'EXTERNALREVIEWCOMPLETED_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'sendForDealDeskReview',
			Constants.SENDFORDEALDESKREVIEW_METHODNAME,
			'SENDFORDEALDESKREVIEW_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'inDealDeskReview',
			Constants.INDEALDESKREVIEW_METHODNAME,
			'INDEALDESKREVIEW_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'sendForLegalReview',
			Constants.SENDFORLEGALREVIEW_METHODNAME,
			'SENDFORLEGALREVIEW_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'inLegalReview',
			Constants.INLEGALREVIEW_METHODNAME,
			'INLEGALREVIEW_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'inRequesterReview',
			Constants.INREQUESTERREVIEW_METHODNAME,
			'INREQUESTERREVIEW_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'canceledContract',
			Constants.CANCELCONTRACT_METHODNAME,
			'CANCELCONTRACT_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'readyForSignature',
			Constants.READYFORSIGNATURE_METHODNAME,
			'READYFORSIGNATURE_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'MSAInRequesterReview',
			Constants.MSAINREQUESTERREVIEW_METHODNAME,
			'MSAINREQUESTERREVIEW_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'BAAInRequesterReview',
			Constants.BAAINREQUESTERREVIEW_METHODNAME,
			'BAAINREQUESTERREVIEW_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'MSAInLegalReview',
			Constants.MSAINLEGALREVIEW_METHODNAME,
			'MSAINLEGALREVIEW_METHODNAME constant should match expected value'
		);
		System.assertEquals(
			'BAAInLegalReview',
			Constants.BAAINLEGALREVIEW_METHODNAME,
			'BAAINLEGALREVIEW_METHODNAME constant should match expected value'
		);

		// CLM Status Constants
		System.assertEquals('Draft', Constants.DRAFT_STATUS, 'DRAFT_STATUS constant should match expected value');
		System.assertEquals(
			'In Approval Process',
			Constants.INAPPROVALPROCESS_STATUS,
			'INAPPROVALPROCESS_STATUS constant should match expected value'
		);
		System.assertEquals(
			'Negotiating',
			Constants.NEGOTIATING_STATUS,
			'NEGOTIATING_STATUS constant should match expected value'
		);
		System.assertEquals(
			'Send for Internal Review',
			Constants.SENDFORINTERNALREVIEW_STATUS,
			'SENDFORINTERNALREVIEW_STATUS constant should match expected value'
		);
		System.assertEquals(
			'Send for Deal Desk Review',
			Constants.SENDFORDEALDESKREVIEW_STATUS,
			'SENDFORDEALDESKREVIEW_STATUS constant should match expected value'
		);
		System.assertEquals(
			'In Deal Desk Review',
			Constants.INDEALDESKREVIEW_STATUS,
			'INDEALDESKREVIEW_STATUS constant should match expected value'
		);
		System.assertEquals(
			'Send for Legal Review',
			Constants.SENDFORLEGALREVIEW_STATUS,
			'SENDFORLEGALREVIEW_STATUS constant should match expected value'
		);
		System.assertEquals(
			'In Legal Review',
			Constants.INLEGALREVIEW_STATUS,
			'INLEGALREVIEW_STATUS constant should match expected value'
		);
		System.assertEquals(
			'In Requester Review',
			Constants.INREQUESTERREVIEW_STATUS,
			'INREQUESTERREVIEW_STATUS constant should match expected value'
		);
		System.assertEquals(
			'Canceled',
			Constants.CANCELCONTRACT_STATUS,
			'CANCELCONTRACT_STATUS constant should match expected value'
		);
		System.assertEquals(
			'Ready for Signature',
			Constants.READYFORSIGNATURE_STATUS,
			'READYFORSIGNATURE_STATUS constant should match expected value'
		);
		System.assertEquals(
			'MSA In Requester Review',
			Constants.MSAINREQUESTERREVIEW_STATUS,
			'MSAINREQUESTERREVIEW_STATUS constant should match expected value'
		);
		System.assertEquals(
			'BAA In Requester Review',
			Constants.BAAINREQUESTERREVIEW_STATUS,
			'BAAINREQUESTERREVIEW_STATUS constant should match expected value'
		);
		System.assertEquals(
			'MSA In Legal Review',
			Constants.MSAINLEGALREVIEW_STATUS,
			'MSAINLEGALREVIEW_STATUS constant should match expected value'
		);
		System.assertEquals(
			'BAA In Legal Review',
			Constants.BAAINLEGALREVIEW_STATUS,
			'BAAINLEGALREVIEW_STATUS constant should match expected value'
		);

		// Additional CLM Constants
		System.assertEquals('isSuccess', Constants.IS_SUCCESS, 'IS_SUCCESS constant should match expected value');
		System.assertEquals(
			'finalStatusValue',
			Constants.FINALSTATUSVALUE,
			'FINALSTATUSVALUE constant should match expected value'
		);
		System.assertEquals('error', Constants.ERROR, 'ERROR constant should match expected value');
		System.assertEquals(
			'Unknown methodName: ',
			Constants.UNKNOWN_METHODNAME,
			'UNKNOWN_METHODNAME constant should match expected value'
		);
		System.assertEquals('Regular', Constants.REGULAR, 'REGULAR constant should match expected value');
		System.assertEquals(
			'Contract',
			Constants.CONTRACT_OBJECT_NAME,
			'CONTRACT_OBJECT_NAME constant should match expected value'
		);
		System.assertEquals('Standard', Constants.STANDARD, 'STANDARD constant should match expected value');
		System.assertEquals(
			'Physical Device',
			Constants.PHYSICAL_DEVICE,
			'PHYSICAL_DEVICE constant should match expected value'
		);
		System.assertEquals(
			'Device Accessories',
			Constants.DEVICE_ACCESSORIES,
			'DEVICE_ACCESSORIES constant should match expected value'
		);
		System.assertEquals(
			'Product Activation',
			Constants.PRODUCT_ACTIVATION,
			'PRODUCT_ACTIVATION constant should match expected value'
		);
		System.assertEquals(
			'Update Product',
			Constants.UPDATE_PRODUCT,
			'UPDATE_PRODUCT constant should match expected value'
		);
		System.assertEquals('NDA', Constants.NDA, 'NDA constant should match expected value');
		System.assertEquals('Mutual', Constants.MUTUAL, 'MUTUAL constant should match expected value');
		System.assertEquals(
			'CLM_Send_for_Legal_Approval',
			Constants.CLM_SEND_FOR_LEGAL_APPROVAL,
			'CLM_Send_for_Legal_Approval constant should match expected value'
		);

		// Account and Field Constants
		System.assertEquals('Legal Hold', Constants.LEGAL_HOLD, 'LEGAL_HOLD constant should match expected value');
		System.assertEquals(
			'Credit or Trade Hold',
			Constants.CREDIT_TRADE_HOLD,
			'CREDIT_TRADE_HOLD constant should match expected value'
		);
		System.assertEquals(
			'Bill_To_Account__c',
			Constants.BILL_TO_ACCOUNT,
			'BILL_TO_ACCOUNT constant should match expected value'
		);
		System.assertEquals('DEAL_DESK', Constants.DEAL_DESK, 'DEAL_DESK constant should match expected value');

		// Milestone Constants
		System.assertEquals(
			'First Response',
			Constants.MT_FIRST_RESPONSE,
			'MT_FIRST_RESPONSE constant should match expected value'
		);
		System.assertEquals(
			'Case Resolution SLA',
			Constants.MT_CASE_RESOLUTION,
			'MT_CASE_RESOLUTION constant should match expected value'
		);
		System.assertEquals(
			'First Response Test',
			Constants.MT_FIRST_RESPONSE_TEST,
			'MT_FIRST_RESPONSE_TEST constant should match expected value'
		);
		System.assertEquals(
			'Case Resolution SLA Test',
			Constants.MT_CASE_RESOLUTION_TEST,
			'MT_CASE_RESOLUTION_TEST constant should match expected value'
		);

		// Case Record Type Constants
		System.assertEquals(
			'Billing',
			Constants.CASE_BILLING_OPS_DEV,
			'CASE_BILLING_OPS_DEV constant should match expected value'
		);
		System.assertEquals(
			'Renewal_Ops',
			Constants.CASE_REN_OPS_DEV,
			'CASE_REN_OPS_DEV constant should match expected value'
		);
		System.assertEquals(
			'Standard_Support_Request',
			Constants.CASE_BIS_OPS_DEV,
			'CASE_BIS_OPS_DEV constant should match expected value'
		);
		System.assertEquals(
			'SKU_Support_Request',
			Constants.CASE_SKU_DEV,
			'CASE_SKU_DEV constant should match expected value'
		);

		// API and Object Constants
		System.assertEquals('Case', Constants.CASE_OBJ, 'CASE_OBJ constant should match expected value');
		System.assertEquals('POST', Constants.APIMETHOD, 'APIMETHOD constant should match expected value');
		System.assertEquals('Content-Type', Constants.HEADERKEY, 'HEADERKEY constant should match expected value');
		System.assertEquals(
			'application/json',
			Constants.HEADERVALUE,
			'HEADERVALUE constant should match expected value'
		);

		// Trial and Amendment Constants
		System.assertEquals(
			'Trial Extension',
			Constants.TRIAL_EXTENSION,
			'TRIAL_EXTENSION constant should match expected value'
		);
		System.assertEquals('Trial', Constants.TRIAL, 'TRIAL constant should match expected value');
		System.assertEquals('Amendment', Constants.AMENDMENT, 'AMENDMENT constant should match expected value');
		System.assertEquals(
			'Cancellation',
			Constants.CANCELLATION,
			'CANCELLATION constant should match expected value'
		);
		System.assertEquals('Bundle', Constants.BUNDLE, 'BUNDLE constant should match expected value');
		System.assertEquals(
			'Warranty Replacement',
			Constants.WARRANTY_REPLACEMENT,
			'WARRANTY_REPLACEMENT constant should match expected value'
		);
		System.assertEquals('InProgress', Constants.INPROGRESS, 'INPROGRESS constant should match expected value');

		// Revenue Constants (LTCI-4948)
		System.assertEquals(
			'EventUploadService',
			Constants.REVENUE_EVENT_NAME,
			'REVENUE_EVENT_NAME constant should match expected value'
		);
		System.assertEquals('Release', Constants.REVENUE_ACTION, 'REVENUE_ACTION constant should match expected value');
		System.assertEquals(
			'Point In Time',
			Constants.REVENUE_DISTRIBUTION_METHOD_HARDWARE,
			'REVENUE_DISTRIBUTION_METHOD_HARDWARE constant should match expected value'
		);
		System.assertEquals(
			'Catch-up in Current Period',
			Constants.PRIOR_PERIOD_REVENUE_METHOD,
			'PRIOR_PERIOD_REVENUE_METHOD constant should match expected value'
		);
		System.assertEquals(
			'perform revenue release',
			Constants.USER_COMMENTS,
			'USER_COMMENTS constant should match expected value'
		);
		System.assertEquals(
			'Ratable',
			Constants.REVENUE_DISTRIBUTION_METHOD,
			'REVENUE_DISTRIBUTION_METHOD constant should match expected value'
		);
		System.assertEquals('quantity', Constants.KEY_QUANTITY, 'KEY_QUANTITY constant should match expected value');
		System.assertEquals(
			'percentage',
			Constants.KEY_PERCENTAGE,
			'KEY_PERCENTAGE constant should match expected value'
		);

		// Auto-Renewal Constants
		System.assertEquals('PATCH', Constants.PATCH, 'PATCH constant should match expected value');
		System.assertEquals('refQuote', Constants.REFQUOTE, 'REFQUOTE constant should match expected value');
		System.assertEquals('120', Constants.RENEWALDATE_120, 'RENEWALDATE_120 constant should match expected value');
		System.assertEquals('2', Constants.RENEWALDATE_2, 'RENEWALDATE_2 constant should match expected value');
		System.assertEquals('Renewal', Constants.RENEWAL, 'RENEWAL constant should match expected value');
		System.assertEquals('Booked', Constants.BOOKED, 'BOOKED constant should match expected value');
		System.assertEquals(
			'Auto-Renewal',
			Constants.AUTO_RENEWAL,
			'AUTO_RENEWAL constant should match expected value'
		);
		System.assertEquals(
			'Direct Quoting',
			Constants.DIRECT_QUOTING,
			'DIRECT_QUOTING constant should match expected value'
		);
		System.assertEquals(
			'0 0 0 1 * ?',
			Constants.ASSET_RENEWAL_NOTIF_CRON,
			'ASSET_RENEWAL_NOTIF_CRON constant should match expected value'
		);
		System.assertEquals('Renew', Constants.RENEW, 'RENEW constant should match expected value');
		System.assertEquals(
			'Cancel and Replace',
			Constants.CANCEL_AND_REPLACE,
			'CANCEL_AND_REPLACE constant should match expected value'
		);

		// Oracle Sync Constants (LTCI-3088)
		System.assertEquals(
			'Ready for Re-Sync',
			Constants.ORACLESYNCSTATUS_READYFORRESYNC,
			'ORACLESYNCSTATUS_READYFORRESYNC constant should match expected value'
		);
		System.assertEquals(
			'Invoice',
			Constants.INTEGRATION_EVENT_OBJECT_INVOICE,
			'INTEGRATION_EVENT_OBJECT_INVOICE constant should match expected value'
		);
		System.assertEquals(
			'CreditMemo',
			Constants.INTEGRATION_EVENT_OBJECT_CREDITMEMO,
			'INTEGRATION_EVENT_OBJECT_CREDITMEMO constant should match expected value'
		);
		System.assertEquals(
			'CreditMemoInvApplication',
			Constants.INTEGRATION_EVENT_OBJECT_CREDITMEMOINVOICEAPPLICATION,
			'INTEGRATION_EVENT_OBJECT_CREDITMEMOINVOICEAPPLICATION constant should match expected value'
		);
		System.assertEquals(
			'In Progress',
			Constants.ORACLE_SYNC_STATUS_IN_PROGRESS,
			'ORACLE_SYNC_STATUS_IN_PROGRESS constant should match expected value'
		);
		System.assertEquals(
			'Standalone',
			Constants.CREDITMEMO_SOURCEACTION_STANDALONE,
			'CREDITMEMO_SOURCEACTION_STANDALONE constant should match expected value'
		);
		System.assertEquals(
			'VoidPostedInvoice',
			Constants.CREDITMEMO_SOURCEACTION_VOIDPOSTEDINVOICE,
			'CREDITMEMO_SOURCEACTION_VOIDPOSTEDINVOICE constant should match expected value'
		);
		System.assertEquals(
			'Invoice',
			Constants.CREDITMEMO_SOURCEACTION_INVOICE,
			'CREDITMEMO_SOURCEACTION_INVOICE constant should match expected value'
		);
		System.assertEquals(
			'NegativeInvoiceLineConversion',
			Constants.CREDITMEMO_SOURCEACTION_NEGATIVEINVOICELINECONVERSION,
			'CREDITMEMO_SOURCEACTION_NEGATIVEINVOICELINECONVERSION constant should match expected value'
		);
		System.assertEquals(
			'Header__c',
			Constants.PLATFORMEVENT_FIELD_HEADER,
			'PLATFORMEVENT_FIELD_HEADER constant should match expected value'
		);
		System.assertEquals(
			'GroupID__c',
			Constants.PLATFORMEVENT_FIELD_GROUPID,
			'PLATFORMEVENT_FIELD_GROUPID constant should match expected value'
		);
		System.assertEquals(
			'EventType__c',
			Constants.PLATFORMEVENT_FIELD_EVENTTYPE,
			'PLATFORMEVENT_FIELD_EVENTTYPE constant should match expected value'
		);
		System.assertEquals(
			'IntegrationEvents__c',
			Constants.PLATFORMEVENT_FIELD_INTEGRATIONEVENTS,
			'PLATFORMEVENT_FIELD_INTEGRATIONEVENTS constant should match expected value'
		);
		System.assertEquals(
			'In Progress',
			Constants.INTEGRATION_EVENT_STATUS_IN_PROGRESS,
			'INTEGRATION_EVENT_STATUS_IN_PROGRESS constant should match expected value'
		);
		System.assertEquals(
			'Posted',
			Constants.INVOICE_POSTED_STATUS,
			'INVOICE_POSTED_STATUS constant should match expected value'
		);
		System.assertEquals(';', Constants.SEMI_COLON, 'SEMI_COLON constant should match expected value');

		// Reason Constants (LTCI-5696)
		System.assertEquals(
			'Cross-Sell',
			Constants.REASON_CROSS_SELL,
			'REASON_CROSS_SELL constant should match expected value'
		);
		System.assertEquals(
			'Transfer',
			Constants.REASON_TRANSFER,
			'REASON_TRANSFER constant should match expected value'
		);
		System.assertEquals('Replace', Constants.REASON_REPLACE, 'REASON_REPLACE constant should match expected value');
		System.assertEquals('Cancel', Constants.REASON_CANCEL, 'REASON_CANCEL constant should match expected value');
		System.assertEquals('Add-On', Constants.REASON_ADD_ON, 'REASON_ADD_ON constant should match expected value');
		System.assertEquals('Upsell', Constants.REASON_UPSELL, 'REASON_UPSELL constant should match expected value');
		System.assertEquals(
			'Downsell',
			Constants.REASON_DOWNSELL,
			'REASON_DOWNSELL constant should match expected value'
		);
		System.assertEquals(
			'Flat Renewal',
			Constants.REASON_FLAT_RENEWAL,
			'REASON_FLAT_RENEWAL constant should match expected value'
		);
		System.assertEquals(
			'Hardware Upgrade',
			Constants.REASON_HARDWARE_UPGRADE,
			'REASON_HARDWARE_UPGRADE constant should match expected value'
		);
		System.assertEquals(
			'Field Upgrade (capacity)',
			Constants.REASON_FIELD_UPGRADE_CAPACITY,
			'REASON_FIELD_UPGRADE_CAPACITY constant should match expected value'
		);
		System.assertEquals(
			'Retention Upgrade',
			Constants.REASON_RETENTION_UPGRADE,
			'REASON_RETENTION_UPGRADE constant should match expected value'
		);
		System.assertEquals(
			'Transfers',
			Constants.TRANSACTION_TYPE_TRANSFERS,
			'TRANSACTION_TYPE_TRANSFERS constant should match expected value'
		);
		System.assertEquals(
			'New Business',
			Constants.TRANSACTION_TYPE_NEW_BUSINESS,
			'TRANSACTION_TYPE_NEW_BUSINESS constant should match expected value'
		);
		System.assertEquals(
			'Device Upgrade',
			Constants.TRANSACTION_TYPE_DEVICE_UPGRADE,
			'TRANSACTION_TYPE_DEVICE_UPGRADE constant should match expected value'
		);

		// Numeric and Generic Constants
		System.assertEquals(0, Constants.ZERO, 'ZERO constant should match expected value');
		System.assertEquals(1, Constants.ONE, 'ONE constant should match expected value');
		System.assertEquals('All', Constants.ALL, 'ALL constant should match expected value');

		// GR4VY Constants (LTCI-292)
		System.assertEquals(
			'Request body is empty.',
			Constants.GR4VY_ERRORMESSAGE_REQUESTBODYEMPTY,
			'GR4VY_ERRORMESSAGE_REQUESTBODYEMPTY constant should match expected value'
		);
		System.assertEquals(
			'Payment method stored successfully.',
			Constants.GR4VY_SUCCESSMESSAGE_PAYMENTMETHODSTOREDSUCCESSFULLY,
			'GR4VY_SUCCESSMESSAGE_PAYMENTMETHODSTOREDSUCCESSFULLY constant should match expected value'
		);
		System.assertEquals(
			'Error processing request: ',
			Constants.GR4VY_ERRORMESSAGE_ERRORPROCESSINGREQUEST,
			'GR4VY_ERRORMESSAGE_ERRORPROCESSINGREQUEST constant should match expected value'
		);
		System.assertEquals(
			'Missing required parameters. customerId and tokenizedValue are required.',
			Constants.GR4VY_ERRORMESSAGE_MISSINGREQUIREDPARAMS,
			'GR4VY_ERRORMESSAGE_MISSINGREQUIREDPARAMS constant should match expected value'
		);
		System.assertEquals(
			'target.buyer.external_identifier',
			Constants.GR4VY_RESPONSEPATH_EXTERNALIDENTIFIER,
			'GR4VY_RESPONSEPATH_EXTERNALIDENTIFIER constant should match expected value'
		);
		System.assertEquals(
			'target.payment_method.id',
			Constants.GR4VY_RESPONSEPATH_PAYMENTMETHODID,
			'GR4VY_RESPONSEPATH_PAYMENTMETHODID constant should match expected value'
		);
		System.assertEquals(
			'External',
			Constants.GR4VY_CARDPAYMETHOD_PROCESSINGMODE,
			'GR4VY_CARDPAYMETHOD_PROCESSINGMODE constant should match expected value'
		);
		System.assertEquals(
			'Active',
			Constants.GR4VY_CARDPAYMETHOD_STATUS,
			'GR4VY_CARDPAYMETHOD_STATUS constant should match expected value'
		);
		System.assertEquals(
			400,
			Constants.GR4VY_RESTRESOURCE_STATUSCODE_400,
			'GR4VY_RESTRESOURCE_STATUSCODE_400 constant should match expected value'
		);
		System.assertEquals(
			500,
			Constants.GR4VY_RESTRESOURCE_STATUSCODE_500,
			'GR4VY_RESTRESOURCE_STATUSCODE_500 constant should match expected value'
		);
		System.assertEquals(
			200,
			Constants.GR4VY_RESTRESOURCE_STATUSCODE_200,
			'GR4VY_RESTRESOURCE_STATUSCODE_200 constant should match expected value'
		);
		System.assertEquals(
			'target.payment_method.details.bin',
			Constants.GR4VY_RESPONSEPATH_PAYMENTMETHODBIN,
			'GR4VY_RESPONSEPATH_PAYMENTMETHODBIN constant should match expected value'
		);
		System.assertEquals(
			'target.payment_method.scheme',
			Constants.GR4VY_RESPONSEPATH_PAYMENTMETHODSCHEME,
			'GR4VY_RESPONSEPATH_PAYMENTMETHODSCHEME constant should match expected value'
		);
		System.assertEquals(
			'target.label',
			Constants.GR4VY_RESPONSEPATH_CARDLABEL,
			'GR4VY_RESPONSEPATH_CARDLABEL constant should match expected value'
		);
		System.assertEquals(
			'target.expiration_date',
			Constants.GR4VY_RESPONSEPATH_CARDEXPIRY,
			'GR4VY_RESPONSEPATH_CARDEXPIRY constant should match expected value'
		);

		// Kaseya 365 Constants (LTCI-5673)
		System.assertEquals(
			'S-K365-OPS',
			Constants.K365_PRODUCTCODE,
			'K365_PRODUCTCODE constant should match expected value'
		);
		System.assertEquals(
			'Kaseya365Ops',
			Constants.KASEYA_365_OPS,
			'KASEYA_365_OPS constant should match expected value'
		);
		System.assertEquals(
			'Kaseya365EndPoint',
			Constants.KASEYA_365_ENDPOINT,
			'KASEYA_365_ENDPOINT constant should match expected value'
		);
		System.assertEquals(
			'Kaseya 365 Ops',
			Constants.UPGRADE_ELIGIBLE_KASEYA_365_OPS,
			'UPGRADE_ELIGIBLE_KASEYA_365_OPS constant should match expected value'
		);
		System.assertEquals(
			'Kaseya 365 Endpoint',
			Constants.UPGRADE_ELIGIBLE_KASEYA_365_ENDPOINT,
			'UPGRADE_ELIGIBLE_KASEYA_365_ENDPOINT constant should match expected value'
		);
		System.assertEquals(
			'callout:PlaceQuoteAPI',
			Constants.CALLOUT_PLACE_QUOTE_API,
			'CALLOUT_PLACE_QUOTE_API constant should match expected value'
		);
		System.assertEquals(
			'S-K365-OPS',
			Constants.K365_STOCK_KEEPING_UNIT_CODE,
			'K365_STOCK_KEEPING_UNIT_CODE constant should match expected value'
		);
		System.assertEquals(
			'S-K365-EPO-PRO',
			Constants.K365_ENDPOINT_PRO_UNIT_CODE,
			'K365_ENDPOINT_PRO_UNIT_CODE constant should match expected value'
		);
		System.assertEquals(
			'Anniversary',
			Constants.PERIOD_BOUNDARY_ANNIVERSARY,
			'PERIOD_BOUNDARY_ANNIVERSARY constant should match expected value'
		);
		System.assertEquals(
			'Monthly',
			Constants.BILLING_FREQUENCY_MONTHLY,
			'BILLING_FREQUENCY_MONTHLY constant should match expected value'
		);
		System.assertEquals(
			'Content-Type',
			Constants.HEADER_CONTENT,
			'HEADER_CONTENT constant should match expected value'
		);
		System.assertEquals(
			'application/json',
			Constants.HEADER_JSON,
			'HEADER_JSON constant should match expected value'
		);
		System.assertEquals('myGraphId', Constants.GRAPH_ID, 'GRAPH_ID constant should match expected value');
		System.assertEquals('POST', Constants.POST, 'POST constant should match expected value');
		System.assertEquals(
			'PlaceQuote',
			Constants.PLACE_QUOTE_METADATA_NAME,
			'PLACE_QUOTE_METADATA_NAME constant should match expected value'
		);
		System.assertEquals(
			'QuoteLineItem',
			Constants.QUOTE_LINE_ITEM_OBJECT_TYPE,
			'QUOTE_LINE_ITEM_OBJECT_TYPE constant should match expected value'
		);
		System.assertEquals(
			'System',
			Constants.SYSTEM_PRICING_PREF,
			'SYSTEM_PRICING_PREF constant should match expected value'
		);
		System.assertEquals(
			'updateQuote',
			Constants.UPDATE_QUOTE_GRAPH_ID,
			'UPDATE_QUOTE_GRAPH_ID constant should match expected value'
		);
		System.assertEquals('pricingPref', Constants.PRICING_PREF, 'PRICING_PREF constant should match expected value');
		System.assertEquals('graphId', Constants.GRAPH_ID_KEY, 'GRAPH_ID_KEY constant should match expected value');
		System.assertEquals(
			'refQuoteLineItemToCreate',
			Constants.REF_QUOTE_LINE_ITEM_TO_CREATE,
			'REF_QUOTE_LINE_ITEM_TO_CREATE constant should match expected value'
		);
		System.assertEquals('records', Constants.RECORDS_KEY, 'RECORDS_KEY constant should match expected value');
		System.assertEquals('graph', Constants.GRAPH_KEY, 'GRAPH_KEY constant should match expected value');
		System.assertEquals(
			'referenceId',
			Constants.REFERENCE_ID_KEY,
			'REFERENCE_ID_KEY constant should match expected value'
		);
		System.assertEquals('method', Constants.METHOD_KEY, 'METHOD_KEY constant should match expected value');
		System.assertEquals('record', Constants.RECORD_KEY, 'RECORD_KEY constant should match expected value');
		System.assertEquals(
			'attributes',
			Constants.ATTRIBUTES_KEY,
			'ATTRIBUTES_KEY constant should match expected value'
		);
		System.assertEquals(
			'@{refQuote.id}',
			Constants.REF_QUOTE_ID,
			'REF_QUOTE_ID constant should match expected value'
		);
		System.assertEquals(1.0, Constants.DEFAULT_QUANTITY, 'DEFAULT_QUANTITY constant should match expected value');

		// Team Member Role and Opportunity Constants
		System.assertEquals(
			'Renewal Specialist',
			Constants.TEAM_ROLE_RENEWAL_SPECIALIST,
			'TEAM_ROLE_RENEWAL_SPECIALIST constant should match expected value'
		);
		System.assertEquals(
			'Manager of Renewals',
			Constants.TEAM_ROLE_MANAGER_OF_RENEWALS,
			'TEAM_ROLE_MANAGER_OF_RENEWALS constant should match expected value'
		);
		System.assertEquals(
			'Solution Specialist',
			Constants.TEAM_ROLE_SOLUTION_SPECIALIST,
			'TEAM_ROLE_SOLUTION_SPECIALIST constant should match expected value'
		);
		System.assertEquals(
			'BCDR Concierge',
			Constants.TEAM_ROLE_BCDR_CONCIERGE,
			'TEAM_ROLE_BCDR_CONCIERGE constant should match expected value'
		);
		System.assertEquals(
			'Edit',
			Constants.ACCESS_LEVEL_EDIT,
			'ACCESS_LEVEL_EDIT constant should match expected value'
		);
		System.assertEquals(
			'Closed Lost',
			Constants.OPPORTUNITY_STAGE_CLOSED_LOST,
			'OPPORTUNITY_STAGE_CLOSED_LOST constant should match expected value'
		);
		System.assertEquals(
			'Closed Won',
			Constants.OPPORTUNITY_STAGE_CLOSED_WON,
			'OPPORTUNITY_STAGE_CLOSED_WON constant should match expected value'
		);
		System.assertEquals(
			'360 Review',
			Constants.PRODUCT_GROUP_360_REVIEW,
			'PRODUCT_GROUP_360_REVIEW constant should match expected value'
		);
		System.assertEquals(
			'Endpoint',
			Constants.PRODUCT_GROUP_ENDPOINT,
			'PRODUCT_GROUP_ENDPOINT constant should match expected value'
		);
		System.assertEquals(
			'IT Operations',
			Constants.PRODUCT_GROUP_IT_OPERATIONS,
			'PRODUCT_GROUP_IT_OPERATIONS constant should match expected value'
		);
		System.assertEquals(
			'TestingAccount',
			Constants.TEST_ACCOUNT_NAME,
			'TEST_ACCOUNT_NAME constant should match expected value'
		);
		System.assertEquals(
			'TestingOpportunity',
			Constants.TEST_OPPORTUNITY_NAME,
			'TEST_OPPORTUNITY_NAME constant should match expected value'
		);
		System.assertEquals(
			'type',
			Constants.TYPE_HEADER_PARAMETER,
			'TYPE_HEADER_PARAMETER constant should match expected value'
		);

		// Invoice Related Constants
		System.assertEquals('{}', Constants.EMPTY_JSON_BODY, 'EMPTY_JSON_BODY constant should match expected value');
		System.assertEquals(
			'callout:CreditMemoCreation/invoicing/invoices/',
			Constants.VOID_API_BASE_URL,
			'VOID_API_BASE_URL constant should match expected value'
		);
		System.assertEquals(
			'/actions/void',
			Constants.VOID_API_END_URL,
			'VOID_API_END_URL constant should match expected value'
		);
		System.assertEquals('Invoice Id', Constants.INVOICE_ID, 'INVOICE_ID constant should match expected value');
		System.assertEquals(
			'INV-12345',
			Constants.INVOICE_ID_TEST,
			'INVOICE_ID_TEST constant should match expected value'
		);
		System.assertEquals('INV-FAIL', Constants.INV_FAIL, 'INV_FAIL constant should match expected value');
		System.assertEquals('Invoice voided', Constants.INV_VOIDED, 'INV_VOIDED constant should match expected value');
		System.assertEquals(
			'callout:CreditMemoCreation/',
			Constants.API_BASE_URL,
			'API_BASE_URL constant should match expected value'
		);
		System.assertEquals(
			'invoicing/invoices/collection/actions/ingest',
			Constants.API_STANDALONE_INVOICE,
			'API_STANDALONE_INVOICE constant should match expected value'
		);
		System.assertEquals(
			'invoicing/credit-memos/actions/generate',
			Constants.API_STANDALONECM,
			'API_STANDALONECM constant should match expected value'
		);
		System.assertEquals(
			'callout:CreditMemoCreation/invoicing/credit-memos/',
			Constants.API_APPLYCMURL_START,
			'API_APPLYCMURL_START constant should match expected value'
		);
		System.assertEquals(
			'/actions/apply',
			Constants.API_APPLYCMURL_END,
			'API_APPLYCMURL_END constant should match expected value'
		);
		System.assertEquals('Estimated', Constants.ESTIMATED, 'ESTIMATED constant should match expected value');
		System.assertEquals('refAccount', Constants.REFACCOUNT, 'REFACCOUNT constant should match expected value');
		System.assertEquals('refInvoice', Constants.REFINVOICE, 'REFINVOICE constant should match expected value');
		System.assertEquals('GET', Constants.GET, 'GET constant should match expected value');
		System.assertEquals(
			'Pre-Payment Invoice',
			Constants.PREPAIDINVOICE,
			'PREPAIDINVOICE constant should match expected value'
		);
		System.assertEquals(
			'refBillingAddress',
			Constants.REFBILLADDRESS,
			'REFBILLADDRESS constant should match expected value'
		);
		System.assertEquals(
			'InvoiceAddressGroup',
			Constants.INVOICEADDRESSGROUP_OBJECT,
			'INVOICEADDRESSGROUP_OBJECT constant should match expected value'
		);
		System.assertEquals(
			'InvoiceLine',
			Constants.INVOICELINE_OBJECT,
			'INVOICELINE_OBJECT constant should match expected value'
		);
		System.assertEquals(
			'refShippingAddress',
			Constants.REFSHIPADDRESS,
			'REFSHIPADDRESS constant should match expected value'
		);
		System.assertEquals('Ignore', Constants.IGNORE, 'IGNORE constant should match expected value');

		// Quote Line Item Field Constants
		System.assertEquals('QuoteId', Constants.QUOTE_ID_FIELD, 'QUOTE_ID_FIELD constant should match expected value');
		System.assertEquals(
			'PricebookEntryId',
			Constants.PRICEBOOK_ENTRY_ID_FIELD,
			'PRICEBOOK_ENTRY_ID_FIELD constant should match expected value'
		);
		System.assertEquals(
			'Product2Id',
			Constants.PRODUCT_2_ID_FIELD,
			'PRODUCT_2_ID_FIELD constant should match expected value'
		);
		System.assertEquals(
			'Quantity',
			Constants.QUANTITY_FIELD,
			'QUANTITY_FIELD constant should match expected value'
		);
		System.assertEquals(
			'UnitPrice',
			Constants.UNIT_PRICE_FIELD,
			'UNIT_PRICE_FIELD constant should match expected value'
		);
	}
}